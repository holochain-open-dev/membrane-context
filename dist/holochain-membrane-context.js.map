{"version":3,"file":"holochain-membrane-context.js","sourceRoot":"","sources":["../src/holochain-membrane-context.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAC9D,OAAO,EAAE,WAAW,EAAE,MAAM,YAAY,CAAC;AAGzC,MAAM,OAAO,wBAAyB,SAAQ,WAAW,CAAC,UAAU,CAAC;IACnE,MAAM,KAAK,gBAAgB;QACzB,OAAO;YACL,QAAQ,EAAE;gBACR,MAAM,EAAE,IAAI;gBACZ,YAAY,EAAE,IAAI;gBAClB,cAAc,EAAE,IAAI;aACrB;SACF,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE;YACrC,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,cAAc,EAAE,IAAI,CAAC,cAAc;SACpC,CAAC,CAAC;IACL,CAAC;IASD,OAAO;QACL,KAAK,CAAC,OAAO,EAAE,CAAC;QAChB,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE;YACrC,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,cAAc,EAAE,IAAI,CAAC,cAAc;SACpC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,KAAK,MAAM;QACf,OAAO,GAAG,CAAA;;;;KAIT,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,eAAe,CAAC;IAC7B,CAAC;CACF;AA1BC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;wDACV;AAEhB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;8DACC;AAE5B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gEACK","sourcesContent":["import { css, html, LitElement, property } from 'lit-element';\nimport { withContext } from 'wc-context';\nimport { AdminWebsocket, AppWebsocket, CellId } from '@holochain/conductor-api';\n\nexport class HolochainMembraneContext extends withContext(LitElement) {\n  static get providedContexts() {\n    return {\n      membrane: {\n        cellId: null,\n        appWebsocket: null,\n        adminWebsocket: null,\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.updateProvidedContext('membrane', {\n      cellId: this.cellId,\n      appWebsocket: this.appWebsocket,\n      adminWebsocket: this.adminWebsocket,\n    });\n  }\n\n  @property({ type: Array })\n  cellId!: CellId;\n  @property({ type: Object })\n  appWebsocket!: AppWebsocket;\n  @property({ type: Object })\n  adminWebsocket!: AdminWebsocket;\n\n  updated() {\n    super.updated();\n    this.updateProvidedContext('membrane', {\n      cellId: this.cellId,\n      appWebsocket: this.appWebsocket,\n      adminWebsocket: this.adminWebsocket,\n    });\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: contents;\n      }\n    `;\n  }\n\n  render() {\n    return html`<slot></slot>`;\n  }\n}\n"]}